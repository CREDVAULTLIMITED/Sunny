{"ast":null,"code":"var _jsxFileName = \"/home/sam/Downloads/Sunny-main/src/components/auth/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        setIsAuthenticated(true);\n        setUser(JSON.parse(userData));\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n    // We'll handle navigation in the component that calls this\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","userData","JSON","parse","login","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/sam/Downloads/Sunny-main/src/components/auth/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create context\nconst AuthContext = createContext();\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem('token');\n      const userData = localStorage.getItem('user');\n      \n      if (token && userData) {\n        setIsAuthenticated(true);\n        setUser(JSON.parse(userData));\n      }\n      \n      setLoading(false);\n    };\n    \n    checkAuth();\n  }, []);\n\n  // Login function\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n    // We'll handle navigation in the component that calls this\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, loading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;QACrBT,kBAAkB,CAAC,IAAI,CAAC;QACxBE,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC/B;MAEAL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,KAAK,GAAGA,CAACN,KAAK,EAAEG,QAAQ,KAAK;IACjCF,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;IACpCC,YAAY,CAACM,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACI,SAAS,CAACL,QAAQ,CAAC,CAAC;IACtDT,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACO,QAAQ,CAAC;EACnB,CAAC;;EAED;EACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BhB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;IACb;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,eAAe;MAAEE,IAAI;MAAEE,OAAO;MAAES,KAAK;MAAEG;IAAO,CAAE;IAAAlB,QAAA,EAC5EA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAxB,EAAA,CA9CaF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+CzB,OAAO,MAAM4B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACG,WAAW,CAAC;AAAA;AAAC8B,GAAA,CAAxCD,OAAO;AAEpB,eAAe7B,WAAW;AAAC,IAAA4B,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}