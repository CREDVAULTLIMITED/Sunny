"use strict";exports.id=708,exports.ids=[708],exports.modules={95708:(a,b,c)=>{c.d(b,{As:()=>i,Sx:()=>f});var d=c(78125);c(28954);var e=c(69491);c(70388);var f=class a{static getDestinationUrl(a,b){if(b)try{let a=new URL(b).hostname;if(["sunnypayments.com","app.sunnypayments.com","business.sunnypayments.com","institutions.sunnypayments.com","admin.sunnypayments.com","developers.sunnypayments.com"].some(b=>a===b||a.endsWith(`.${b}`)))return b}catch{}return e.Bh[a]}static detectAccountType(a){return a.accountType}static handleAuthSuccessWithAutoDetection(b,c){let d=a.detectAccountType(b);a.getDestinationUrl(d,c)}static buildAuthUrl(a,b,c,d="https://auth.sunnypayments.com"){let e=new URL(`/${a}`,d);return b&&e.searchParams.set("type",b),c&&e.searchParams.set("redirect",c),e.toString()}static handleAuthSuccess(a,b,c){let d=this.getDestinationUrl(a.accountType,b);c?c(a,d):window.location.href=d}static detectAccountTypeFromParams(a){if(a?.has("type")){let b=a.get("type");if(Object.values(e.Zs).includes(b))return b}}static canUserAccessDashboard(a,b){return a.accountType===e.Zs.ADMIN||a.accountType===b}static redirectToSignIn(a,b,c="https://auth.sunnypayments.com"){let d=this.buildAuthUrl("signin",a,b,c);window.location.href=d}static redirectToSignUp(a,b,c="https://auth.sunnypayments.com"){let d=this.buildAuthUrl("signup",a,b,c);window.location.href=d}},g={SIGN_IN:"/api/auth/signin",SIGN_UP:"/api/auth/signup",SIGN_OUT:"/api/auth/signout",SOCIAL_AUTH:"/api/auth/social",RESET_PASSWORD:"/api/auth/reset-password",CONFIRM_RESET:"/api/auth/confirm-reset",SETUP_MFA:"/api/auth/mfa/setup",VERIFY_MFA:"/api/auth/mfa/verify",ME:"/api/auth/me"},h=new class{constructor(a=process.env.NEXT_PUBLIC_API_URL||"https://api.sunnypayments.com"){this.baseUrl=a}async makeRequest(a,b={}){let c=`${this.baseUrl}${a}`,d=this.getStoredToken(),e={headers:{"Content-Type":"application/json",...d&&{Authorization:`Bearer ${d}`},...b.headers},...b};try{let a=await fetch(c,e);if(!a.ok){let b=await a.json().catch(()=>({}));throw Error(b.message||`HTTP ${a.status}: ${a.statusText}`)}return await a.json()}catch(b){throw console.error(`API request failed for ${a}:`,b),b}}getStoredToken(){return null}setTokens(a,b){}clearTokens(){}async signIn(a){let b=await this.makeRequest(g.SIGN_IN,{method:"POST",body:JSON.stringify(a)});return b.success&&b.session&&(this.setTokens(b.session.accessToken,b.session.refreshToken),this.storeUserSession(b.user,b.session)),b}async signUp(a){let b=await this.makeRequest(g.SIGN_UP,{method:"POST",body:JSON.stringify(a)});return b.success&&b.session&&(this.setTokens(b.session.accessToken,b.session.refreshToken),this.storeUserSession(b.user,b.session)),b}async signOut(){try{await this.makeRequest(g.SIGN_OUT,{method:"POST"})}catch(a){console.error("Sign out request failed:",a)}finally{this.clearTokens()}}async socialAuth(a){let b=await this.makeRequest(g.SOCIAL_AUTH,{method:"POST",body:JSON.stringify(a)});return b.success&&b.session&&(this.setTokens(b.session.accessToken,b.session.refreshToken),this.storeUserSession(b.user,b.session)),b}async resetPassword(a){return await this.makeRequest(g.RESET_PASSWORD,{method:"POST",body:JSON.stringify(a)})}async confirmPasswordReset(a){return await this.makeRequest(g.CONFIRM_RESET,{method:"POST",body:JSON.stringify(a)})}async setupMFA(a){return await this.makeRequest(g.SETUP_MFA,{method:"POST",body:JSON.stringify(a)})}async verifyMFA(a,b){return await this.makeRequest(g.VERIFY_MFA,{method:"POST",body:JSON.stringify({code:a,method:b})})}async refreshSession(){throw Error("No refresh token available")}async getCurrentUser(){try{return(await this.makeRequest(g.ME)).user}catch(a){return console.error("Failed to get current user:",a),null}}storeUserSession(a,b){}getStoredUser(){return null}getStoredSession(){return null}};function i(){let[a,b]=(0,d.useState)({user:null,session:null,isLoading:!0,isAuthenticated:!1}),c=(0,d.useCallback)(async a=>{b(a=>({...a,isLoading:!0}));try{let c=await h.signIn(a);return c.success&&c.user&&c.session?b({user:c.user,session:c.session,isLoading:!1,isAuthenticated:!0}):b(a=>({...a,isLoading:!1})),c}catch(a){throw b(a=>({...a,isLoading:!1})),a}},[]),e=(0,d.useCallback)(async a=>{b(a=>({...a,isLoading:!0}));try{let c=await h.signUp(a);return c.success&&c.user&&c.session?b({user:c.user,session:c.session,isLoading:!1,isAuthenticated:!0}):b(a=>({...a,isLoading:!1})),c}catch(a){throw b(a=>({...a,isLoading:!1})),a}},[]),f=(0,d.useCallback)(async()=>{b(a=>({...a,isLoading:!0}));try{await h.signOut()}finally{b({user:null,session:null,isLoading:!1,isAuthenticated:!1})}},[]),g=(0,d.useCallback)(async a=>{b(a=>({...a,isLoading:!0}));try{let c=await h.socialAuth(a);return c.success&&c.user&&c.session?b({user:c.user,session:c.session,isLoading:!1,isAuthenticated:!0}):b(a=>({...a,isLoading:!1})),c}catch(a){throw b(a=>({...a,isLoading:!1})),a}},[]),i=(0,d.useCallback)(async a=>await h.resetPassword(a),[]),j=(0,d.useCallback)(async a=>await h.confirmPasswordReset(a),[]),k=(0,d.useCallback)(async a=>await h.setupMFA(a),[]),l=(0,d.useCallback)(async(a,b)=>await h.verifyMFA(a,b),[]),m=(0,d.useCallback)(async()=>{try{let a=await h.refreshSession();return a.success&&a.user&&a.session&&b({user:a.user,session:a.session,isLoading:!1,isAuthenticated:!0}),a}catch(a){throw await f(),a}},[f]);return{user:a.user,session:a.session,isLoading:a.isLoading,isAuthenticated:a.isAuthenticated,signIn:c,signUp:e,signOut:f,socialAuth:g,resetPassword:i,confirmPasswordReset:j,setupMFA:k,verifyMFA:l,refreshSession:m}}}};