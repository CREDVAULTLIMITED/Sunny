{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\n/**\n * Hook for fetching and managing transaction data\n * @returns {Object} Transaction data and functions to manage it\n */\nexport function useTransactions() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch transactions from the API\n  const fetchTransactions = async (filters = {}) => {\n    setIsLoading(true);\n    try {\n      // Get token from localStorage\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n\n      // Make API request with token\n      const response = await axios.get('/api/transactions', {\n        params: filters,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.data.success) {\n        setTransactions(response.data.data);\n        setError(null);\n      } else {\n        throw new Error(response.data.message || 'Failed to fetch transactions');\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to fetch transactions');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial fetch on component mount only if token exists\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchTransactions();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return {\n    transactions,\n    isLoading,\n    error,\n    fetchTransactions\n  };\n}\n_s(useTransactions, \"RXeR0rrhBc2g7rJJZxxcj4FBT+U=\");","map":{"version":3,"names":["axios","useState","useEffect","useTransactions","_s","transactions","setTransactions","isLoading","setIsLoading","error","setError","fetchTransactions","filters","token","localStorage","getItem","Error","response","get","params","headers","Authorization","data","success","message","err","console"],"sources":["/home/sam/Downloads/Sunny-main/src/hooks/use-transactions.js"],"sourcesContent":["import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\n/**\n * Hook for fetching and managing transaction data\n * @returns {Object} Transaction data and functions to manage it\n */\nexport function useTransactions() {\n  const [transactions, setTransactions] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch transactions from the API\n  const fetchTransactions = async (filters = {}) => {\n    setIsLoading(true);\n    try {\n      // Get token from localStorage\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n      \n      // Make API request with token\n      const response = await axios.get('/api/transactions', {\n        params: filters,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      \n      if (response.data.success) {\n        setTransactions(response.data.data);\n        setError(null);\n      } else {\n        throw new Error(response.data.message || 'Failed to fetch transactions');\n      }\n    } catch (err) {\n      setError(err.message || 'Failed to fetch transactions');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial fetch on component mount only if token exists\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchTransactions();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return {\n    transactions,\n    isLoading,\n    error,\n    fetchTransactions\n  };\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMU,iBAAiB,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IAChDJ,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;MACnD;;MAEA;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,mBAAmB,EAAE;QACpDC,MAAM,EAAEP,OAAO;QACfQ,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,KAAK;QAChC;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;QACzBjB,eAAe,CAACW,QAAQ,CAACK,IAAI,CAACA,IAAI,CAAC;QACnCZ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACL,MAAM,IAAIM,KAAK,CAACC,QAAQ,CAACK,IAAI,CAACE,OAAO,IAAI,8BAA8B,CAAC;MAC1E;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACD,OAAO,IAAI,8BAA8B,CAAC;MACvDE,OAAO,CAACjB,KAAK,CAACgB,GAAG,CAAC;IACpB,CAAC,SAAS;MACRjB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACd,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTF,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLH,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLH,YAAY;IACZE,SAAS;IACTE,KAAK;IACLE;EACF,CAAC;AACH;AAACP,EAAA,CAtDeD,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}