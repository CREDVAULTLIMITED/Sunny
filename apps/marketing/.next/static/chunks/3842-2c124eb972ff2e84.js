"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3842],{13842:(e,s,t)=>{t.d(s,{As:()=>l,Sx:()=>r});var n=t(41428);t(27182);var i=t(7457);t(89944);var a=t(13570),r=class e{static getDestinationUrl(e,s){if(s)try{let e=new URL(s).hostname;if(["sunnypayments.com","app.sunnypayments.com","business.sunnypayments.com","institutions.sunnypayments.com","admin.sunnypayments.com","developers.sunnypayments.com"].some(s=>e===s||e.endsWith(".".concat(s))))return s}catch(e){}return i.Bh[e]}static detectAccountType(e){return e.accountType}static handleAuthSuccessWithAutoDetection(s,t){let n=e.detectAccountType(s),i=e.getDestinationUrl(n,t);{let e=window.location.hostname;try{let s=new URL(i).hostname;if(e!==s)window.location.href=i;else{let e=t?new URL(t).pathname:"/dashboard";window.location.pathname=e}}catch(e){window.location.href=i}}}static buildAuthUrl(e,s,t){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"https://auth.sunnypayments.com",i=new URL("/".concat(e),n);s&&i.searchParams.set("type",s),t&&i.searchParams.set("redirect",t);{let e=window.location.hostname;i.searchParams.set("source",e)}return i.toString()}static handleAuthSuccess(e,s,t){let n=this.getDestinationUrl(e.accountType,s);t?t(e,n):window.location.href=n}static detectAccountTypeFromParams(e){if(null==e?void 0:e.has("type")){let s=e.get("type");if(Object.values(i.Zs).includes(s))return s}if(document.referrer)try{let e=new URL(document.referrer).hostname;if(e.includes("business."))return i.Zs.BUSINESS;if(e.includes("institutions."))return i.Zs.INSTITUTION;if(e.includes("developers."))return i.Zs.DEVELOPER;if(e.includes("admin."))return i.Zs.ADMIN;if(e.includes("app."))return i.Zs.INDIVIDUAL}catch(e){}}static canUserAccessDashboard(e,s){return e.accountType===i.Zs.ADMIN||e.accountType===s}static redirectToSignIn(e,s){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"https://auth.sunnypayments.com",n=this.buildAuthUrl("signin",e,s,t);window.location.href=n}static redirectToSignUp(e,s){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"https://auth.sunnypayments.com",n=this.buildAuthUrl("signup",e,s,t);window.location.href=n}},o={ACCESS_TOKEN:"sunny_access_token",REFRESH_TOKEN:"sunny_refresh_token",USER:"sunny_user",SESSION:"sunny_session"},c={SIGN_IN:"/api/auth/signin",SIGN_UP:"/api/auth/signup",SIGN_OUT:"/api/auth/signout",REFRESH:"/api/auth/refresh",SOCIAL_AUTH:"/api/auth/social",RESET_PASSWORD:"/api/auth/reset-password",CONFIRM_RESET:"/api/auth/confirm-reset",SETUP_MFA:"/api/auth/mfa/setup",VERIFY_MFA:"/api/auth/mfa/verify",ME:"/api/auth/me"},u=new class{async makeRequest(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t="".concat(this.baseUrl).concat(e),n=this.getStoredToken(),i={headers:{"Content-Type":"application/json",...n&&{Authorization:"Bearer ".concat(n)},...s.headers},...s};try{let e=await fetch(t,i);if(!e.ok){let s=await e.json().catch(()=>({}));throw Error(s.message||"HTTP ".concat(e.status,": ").concat(e.statusText))}return await e.json()}catch(s){throw console.error("API request failed for ".concat(e,":"),s),s}}getStoredToken(){return localStorage.getItem(o.ACCESS_TOKEN)}setTokens(e,s){localStorage.setItem(o.ACCESS_TOKEN,e),s&&localStorage.setItem(o.REFRESH_TOKEN,s)}clearTokens(){localStorage.removeItem(o.ACCESS_TOKEN),localStorage.removeItem(o.REFRESH_TOKEN),localStorage.removeItem(o.USER),localStorage.removeItem(o.SESSION)}async signIn(e){let s=await this.makeRequest(c.SIGN_IN,{method:"POST",body:JSON.stringify(e)});return s.success&&s.session&&(this.setTokens(s.session.accessToken,s.session.refreshToken),this.storeUserSession(s.user,s.session)),s}async signUp(e){let s=await this.makeRequest(c.SIGN_UP,{method:"POST",body:JSON.stringify(e)});return s.success&&s.session&&(this.setTokens(s.session.accessToken,s.session.refreshToken),this.storeUserSession(s.user,s.session)),s}async signOut(){try{await this.makeRequest(c.SIGN_OUT,{method:"POST"})}catch(e){console.error("Sign out request failed:",e)}finally{this.clearTokens()}}async socialAuth(e){let s=await this.makeRequest(c.SOCIAL_AUTH,{method:"POST",body:JSON.stringify(e)});return s.success&&s.session&&(this.setTokens(s.session.accessToken,s.session.refreshToken),this.storeUserSession(s.user,s.session)),s}async resetPassword(e){return await this.makeRequest(c.RESET_PASSWORD,{method:"POST",body:JSON.stringify(e)})}async confirmPasswordReset(e){return await this.makeRequest(c.CONFIRM_RESET,{method:"POST",body:JSON.stringify(e)})}async setupMFA(e){return await this.makeRequest(c.SETUP_MFA,{method:"POST",body:JSON.stringify(e)})}async verifyMFA(e,s){return await this.makeRequest(c.VERIFY_MFA,{method:"POST",body:JSON.stringify({code:e,method:s})})}async refreshSession(){let e=localStorage.getItem(o.REFRESH_TOKEN);if(!e)throw Error("No refresh token available");let s=await this.makeRequest(c.REFRESH,{method:"POST",body:JSON.stringify({refreshToken:e})});return s.success&&s.session&&(this.setTokens(s.session.accessToken,s.session.refreshToken),this.storeUserSession(s.user,s.session)),s}async getCurrentUser(){try{return(await this.makeRequest(c.ME)).user}catch(e){return console.error("Failed to get current user:",e),null}}storeUserSession(e,s){localStorage.setItem(o.USER,JSON.stringify(e)),localStorage.setItem(o.SESSION,JSON.stringify(s))}getStoredUser(){try{let e=localStorage.getItem(o.USER);return e?JSON.parse(e):null}catch(e){return null}}getStoredSession(){try{let e=localStorage.getItem(o.SESSION);return e?JSON.parse(e):null}catch(e){return null}}constructor(e=a.env.NEXT_PUBLIC_API_URL||"https://api.sunnypayments.com"){this.baseUrl=e}};function l(){let[e,s]=(0,n.useState)({user:null,session:null,isLoading:!0,isAuthenticated:!1});(0,n.useEffect)(()=>{(async()=>{try{let e=u.getStoredUser(),t=u.getStoredSession();if(e&&t){let n=new Date;if(new Date(t.expiresAt)>n)return void s({user:e,session:t,isLoading:!1,isAuthenticated:!0});try{let e=await u.refreshSession();if(e.success&&e.user&&e.session)return void s({user:e.user,session:e.session,isLoading:!1,isAuthenticated:!0})}catch(e){console.error("Session refresh failed:",e)}}s({user:null,session:null,isLoading:!1,isAuthenticated:!1})}catch(e){console.error("Auth initialization failed:",e),s({user:null,session:null,isLoading:!1,isAuthenticated:!1})}})()},[]);let t=(0,n.useCallback)(async e=>{s(e=>({...e,isLoading:!0}));try{let t=await u.signIn(e);return t.success&&t.user&&t.session?s({user:t.user,session:t.session,isLoading:!1,isAuthenticated:!0}):s(e=>({...e,isLoading:!1})),t}catch(e){throw s(e=>({...e,isLoading:!1})),e}},[]),i=(0,n.useCallback)(async e=>{s(e=>({...e,isLoading:!0}));try{let t=await u.signUp(e);return t.success&&t.user&&t.session?s({user:t.user,session:t.session,isLoading:!1,isAuthenticated:!0}):s(e=>({...e,isLoading:!1})),t}catch(e){throw s(e=>({...e,isLoading:!1})),e}},[]),a=(0,n.useCallback)(async()=>{s(e=>({...e,isLoading:!0}));try{await u.signOut()}finally{s({user:null,session:null,isLoading:!1,isAuthenticated:!1})}},[]),r=(0,n.useCallback)(async e=>{s(e=>({...e,isLoading:!0}));try{let t=await u.socialAuth(e);return t.success&&t.user&&t.session?s({user:t.user,session:t.session,isLoading:!1,isAuthenticated:!0}):s(e=>({...e,isLoading:!1})),t}catch(e){throw s(e=>({...e,isLoading:!1})),e}},[]),o=(0,n.useCallback)(async e=>await u.resetPassword(e),[]),c=(0,n.useCallback)(async e=>await u.confirmPasswordReset(e),[]),l=(0,n.useCallback)(async e=>await u.setupMFA(e),[]),h=(0,n.useCallback)(async(e,s)=>await u.verifyMFA(e,s),[]),d=(0,n.useCallback)(async()=>{try{let e=await u.refreshSession();return e.success&&e.user&&e.session&&s({user:e.user,session:e.session,isLoading:!1,isAuthenticated:!0}),e}catch(e){throw await a(),e}},[a]);return{user:e.user,session:e.session,isLoading:e.isLoading,isAuthenticated:e.isAuthenticated,signIn:t,signUp:i,signOut:a,socialAuth:r,resetPassword:o,confirmPasswordReset:c,setupMFA:l,verifyMFA:h,refreshSession:d}}}}]);