{"ast":null,"code":"var _jsxFileName = \"/home/sam/Downloads/Sunny-main/src/components/dashboard/charts/PaymentMethodsChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentMethodsChart = ({\n  data\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Colors for different payment methods\n  const methodColors = {\n    card: '#0070f3',\n    bank_transfer: '#10b981',\n    mobile_money: '#f59e0b',\n    crypto: '#8b5cf6',\n    apple_pay: '#000000',\n    google_pay: '#4285F4',\n    default: '#64748b'\n  };\n\n  // Format payment method name for display\n  const formatMethodName = method => {\n    return method.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n  useEffect(() => {\n    if (!data || !data.length || !canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    const totalVolume = data.reduce((sum, item) => sum + item.volume, 0);\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Set dimensions\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n    const radius = Math.min(width, height) / 2 * 0.8;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Draw pie chart\n    let startAngle = 0;\n    data.forEach(item => {\n      const sliceAngle = item.volume / totalVolume * 2 * Math.PI;\n      const endAngle = startAngle + sliceAngle;\n\n      // Draw slice\n      ctx.beginPath();\n      ctx.moveTo(centerX, centerY);\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.closePath();\n\n      // Fill slice\n      ctx.fillStyle = methodColors[item.method] || methodColors.default;\n      ctx.fill();\n      startAngle = endAngle;\n    });\n\n    // Draw center circle (donut hole)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius * 0.6, 0, 2 * Math.PI);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"200\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-legend\",\n      children: data && data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-color\",\n          style: {\n            backgroundColor: methodColors[item.method] || methodColors.default\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-label\",\n          children: formatMethodName(item.method)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-value\",\n          children: new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            maximumFractionDigits: 0\n          }).format(item.volume)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentMethodsChart, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = PaymentMethodsChart;\nexport default PaymentMethodsChart;\nvar _c;\n$RefreshReg$(_c, \"PaymentMethodsChart\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","PaymentMethodsChart","data","_s","canvasRef","methodColors","card","bank_transfer","mobile_money","crypto","apple_pay","google_pay","default","formatMethodName","method","replace","l","toUpperCase","length","current","ctx","getContext","totalVolume","reduce","sum","item","volume","clearRect","width","height","radius","Math","min","centerX","centerY","startAngle","forEach","sliceAngle","PI","endAngle","beginPath","moveTo","arc","closePath","fillStyle","fill","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","backgroundColor","Intl","NumberFormat","currency","maximumFractionDigits","format","_c","$RefreshReg$"],"sources":["/home/sam/Downloads/Sunny-main/src/components/dashboard/charts/PaymentMethodsChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Charts.css';\n\nconst PaymentMethodsChart = ({ data }) => {\n  const canvasRef = useRef(null);\n  \n  // Colors for different payment methods\n  const methodColors = {\n    card: '#0070f3',\n    bank_transfer: '#10b981',\n    mobile_money: '#f59e0b',\n    crypto: '#8b5cf6',\n    apple_pay: '#000000',\n    google_pay: '#4285F4',\n    default: '#64748b'\n  };\n\n  // Format payment method name for display\n  const formatMethodName = (method) => {\n    return method.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n\n  useEffect(() => {\n    if (!data || !data.length || !canvasRef.current) return;\n\n    const ctx = canvasRef.current.getContext('2d');\n    const totalVolume = data.reduce((sum, item) => sum + item.volume, 0);\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n    // Set dimensions\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n    const radius = Math.min(width, height) / 2 * 0.8;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    \n    // Draw pie chart\n    let startAngle = 0;\n    \n    data.forEach(item => {\n      const sliceAngle = (item.volume / totalVolume) * 2 * Math.PI;\n      const endAngle = startAngle + sliceAngle;\n      \n      // Draw slice\n      ctx.beginPath();\n      ctx.moveTo(centerX, centerY);\n      ctx.arc(centerX, centerY, radius, startAngle, endAngle);\n      ctx.closePath();\n      \n      // Fill slice\n      ctx.fillStyle = methodColors[item.method] || methodColors.default;\n      ctx.fill();\n      \n      startAngle = endAngle;\n    });\n    \n    // Draw center circle (donut hole)\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius * 0.6, 0, 2 * Math.PI);\n    ctx.fillStyle = 'white';\n    ctx.fill();\n    \n  }, [data]);\n\n  return (\n    <div className=\"chart-wrapper\">\n      <div className=\"chart-canvas-container\">\n        <canvas ref={canvasRef} width=\"200\" height=\"200\"></canvas>\n      </div>\n      <div className=\"chart-legend\">\n        {data && data.map((item, index) => (\n          <div key={index} className=\"legend-item\">\n            <div \n              className=\"legend-color\" \n              style={{ backgroundColor: methodColors[item.method] || methodColors.default }}\n            ></div>\n            <div className=\"legend-label\">{formatMethodName(item.method)}</div>\n            <div className=\"legend-value\">\n              {new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                maximumFractionDigits: 0\n              }).format(item.volume)}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentMethodsChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}