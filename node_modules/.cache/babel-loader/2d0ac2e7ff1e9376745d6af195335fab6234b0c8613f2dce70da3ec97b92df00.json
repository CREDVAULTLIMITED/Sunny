{"ast":null,"code":"var _jsxFileName = \"/home/sam/Downloads/Sunny-main/src/components/dashboard/charts/CountryDistributionMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryDistributionMap = ({\n  data\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n\n  // Simple world map coordinates (simplified for visualization purposes)\n  const worldMap = {\n    US: {\n      x: 0.2,\n      y: 0.4,\n      name: 'United States'\n    },\n    CA: {\n      x: 0.2,\n      y: 0.3,\n      name: 'Canada'\n    },\n    MX: {\n      x: 0.2,\n      y: 0.5,\n      name: 'Mexico'\n    },\n    BR: {\n      x: 0.3,\n      y: 0.65,\n      name: 'Brazil'\n    },\n    GB: {\n      x: 0.45,\n      y: 0.3,\n      name: 'United Kingdom'\n    },\n    FR: {\n      x: 0.48,\n      y: 0.35,\n      name: 'France'\n    },\n    DE: {\n      x: 0.5,\n      y: 0.3,\n      name: 'Germany'\n    },\n    ZA: {\n      x: 0.55,\n      y: 0.7,\n      name: 'South Africa'\n    },\n    IN: {\n      x: 0.65,\n      y: 0.45,\n      name: 'India'\n    },\n    CN: {\n      x: 0.75,\n      y: 0.4,\n      name: 'China'\n    },\n    JP: {\n      x: 0.85,\n      y: 0.4,\n      name: 'Japan'\n    },\n    AU: {\n      x: 0.8,\n      y: 0.7,\n      name: 'Australia'\n    }\n  };\n  useEffect(() => {\n    if (!data || !data.length || !canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Set dimensions\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n\n    // Draw simplified world map background\n    ctx.fillStyle = '#f1f5f9';\n    ctx.fillRect(0, 0, width, height);\n\n    // Find max volume for scaling\n    const maxVolume = Math.max(...data.map(item => item.volume));\n\n    // Draw data points\n    data.forEach(item => {\n      const country = worldMap[item.country];\n      if (country) {\n        const x = country.x * width;\n        const y = country.y * height;\n        const radius = Math.max(5, Math.sqrt(item.volume / maxVolume) * 30);\n\n        // Draw circle\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = 'rgba(0, 112, 243, 0.2)';\n        ctx.fill();\n        ctx.strokeStyle = '#0070f3';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Draw country code\n        ctx.font = 'bold 10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = '#1e293b';\n        ctx.fillText(item.country, x, y);\n      }\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-canvas-container\",\n      children: data && data.length > 0 ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"800\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-no-data\",\n        children: \"No country distribution data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-legend\",\n      children: data && data.slice(0, 5).map((item, index) => {\n        var _worldMap$item$countr;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-color\",\n            style: {\n              backgroundColor: '#0070f3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-label\",\n            children: ((_worldMap$item$countr = worldMap[item.country]) === null || _worldMap$item$countr === void 0 ? void 0 : _worldMap$item$countr.name) || item.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-value\",\n            children: new Intl.NumberFormat('en-US', {\n              style: 'currency',\n              currency: 'USD',\n              maximumFractionDigits: 0\n            }).format(item.volume)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryDistributionMap, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CountryDistributionMap;\nexport default CountryDistributionMap;\nvar _c;\n$RefreshReg$(_c, \"CountryDistributionMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CountryDistributionMap","data","_s","canvasRef","worldMap","US","x","y","name","CA","MX","BR","GB","FR","DE","ZA","IN","CN","JP","AU","length","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","maxVolume","Math","max","map","item","volume","forEach","country","radius","sqrt","beginPath","arc","PI","fill","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","slice","index","_worldMap$item$countr","style","backgroundColor","Intl","NumberFormat","currency","maximumFractionDigits","format","_c","$RefreshReg$"],"sources":["/home/sam/Downloads/Sunny-main/src/components/dashboard/charts/CountryDistributionMap.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './Charts.css';\n\nconst CountryDistributionMap = ({ data }) => {\n  const canvasRef = useRef(null);\n  \n  // Simple world map coordinates (simplified for visualization purposes)\n  const worldMap = {\n    US: { x: 0.2, y: 0.4, name: 'United States' },\n    CA: { x: 0.2, y: 0.3, name: 'Canada' },\n    MX: { x: 0.2, y: 0.5, name: 'Mexico' },\n    BR: { x: 0.3, y: 0.65, name: 'Brazil' },\n    GB: { x: 0.45, y: 0.3, name: 'United Kingdom' },\n    FR: { x: 0.48, y: 0.35, name: 'France' },\n    DE: { x: 0.5, y: 0.3, name: 'Germany' },\n    ZA: { x: 0.55, y: 0.7, name: 'South Africa' },\n    IN: { x: 0.65, y: 0.45, name: 'India' },\n    CN: { x: 0.75, y: 0.4, name: 'China' },\n    JP: { x: 0.85, y: 0.4, name: 'Japan' },\n    AU: { x: 0.8, y: 0.7, name: 'Australia' }\n  };\n\n  useEffect(() => {\n    if (!data || !data.length || !canvasRef.current) return;\n\n    const ctx = canvasRef.current.getContext('2d');\n    \n    // Clear canvas\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    \n    // Set dimensions\n    const width = canvasRef.current.width;\n    const height = canvasRef.current.height;\n    \n    // Draw simplified world map background\n    ctx.fillStyle = '#f1f5f9';\n    ctx.fillRect(0, 0, width, height);\n    \n    // Find max volume for scaling\n    const maxVolume = Math.max(...data.map(item => item.volume));\n    \n    // Draw data points\n    data.forEach(item => {\n      const country = worldMap[item.country];\n      \n      if (country) {\n        const x = country.x * width;\n        const y = country.y * height;\n        const radius = Math.max(5, Math.sqrt(item.volume / maxVolume) * 30);\n        \n        // Draw circle\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = 'rgba(0, 112, 243, 0.2)';\n        ctx.fill();\n        ctx.strokeStyle = '#0070f3';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        \n        // Draw country code\n        ctx.font = 'bold 10px Inter, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = '#1e293b';\n        ctx.fillText(item.country, x, y);\n      }\n    });\n    \n  }, [data]);\n\n  return (\n    <div className=\"chart-wrapper\">\n      <div className=\"chart-canvas-container\">\n        {data && data.length > 0 ? (\n          <canvas ref={canvasRef} width=\"800\" height=\"400\"></canvas>\n        ) : (\n          <div className=\"chart-no-data\">No country distribution data available</div>\n        )}\n      </div>\n      <div className=\"chart-legend\">\n        {data && data.slice(0, 5).map((item, index) => (\n          <div key={index} className=\"legend-item\">\n            <div className=\"legend-color\" style={{ backgroundColor: '#0070f3' }}></div>\n            <div className=\"legend-label\">\n              {worldMap[item.country]?.name || item.country}\n            </div>\n            <div className=\"legend-value\">\n              {new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: 'USD',\n                maximumFractionDigits: 0\n              }).format(item.volume)}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CountryDistributionMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}